% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/f7Page.R
\name{f7SplitLayout}
\alias{f7SplitLayout}
\title{Create a Framework7 split layout}
\usage{
f7SplitLayout(..., navbar, sidebar, toolbar = NULL, panels = NULL,
  appbar = NULL, statusbar = f7Statusbar())
}
\arguments{
\item{...}{Content.}

\item{navbar}{Slot for \link{f7Navbar}.}

\item{sidebar}{Slot for \link{f7Panel}. Particularly we expect the following code:
\code{f7Panel(title = "Sidebar", side = "left", theme = "light", "Blabla", style = "reveal")}}

\item{toolbar}{Slot for \link{f7Toolbar}.}

\item{panels}{Slot for \link{f7Panel}. Expect only a right panel, for instance:
\code{f7Panel(title = "Left Panel", side = "right", theme = "light", "Blabla", style = "cover")}}

\item{appbar}{Slot for \link{f7Appbar}.}

\item{statusbar}{Slot for \link{f7Statusbar}.}
}
\description{
This is a modified version of the \link{f7SingleLayout}.
It is intended to be used with tablets.
}
\examples{
if(interactive()){
 library(shiny)
 library(shinyF7)
 shiny::shinyApp(
  ui = f7Page(
    title = "My app",
    init = f7Init(hideNavOnPageScroll = FALSE, hideTabsOnPageScroll = FALSE),
    f7SplitLayout(
      sidebar = f7Panel(
       title = "Sidebar",
       side = "left",
       theme = "light",
       "Blabla",
       style = "reveal"
      ),
      navbar = f7Navbar(
        title = "Split Layout",
        hairline = FALSE,
        shadow = TRUE
      ),
      toolbar = f7Toolbar(
        position = "bottom",
        f7Link(label = "Link 1", src = "https://www.google.com"),
        f7Link(label = "Link 2", src = "https://www.google.com", external = TRUE)
      ),
      # main content
      f7Shadow(
        intensity = 10,
        hover = TRUE,
        f7Card(
          title = "Card header",
          sliderInput("obs", "Number of observations", 0, 1000, 500),
          plotOutput("distPlot"),
          footer = tagList(
            f7Button(color = "blue", label = "My button", src = "https://www.google.com"),
            f7Badge("Badge", color = "green")
          )
        )
      )
    )
  ),
  server = function(input, output) {
    output$distPlot <- renderPlot({
      dist <- rnorm(input$obs)
      hist(dist)
    })
  }
 )
}

}
\author{
David Granjon, \email{dgranjon@ymail.com}
}
