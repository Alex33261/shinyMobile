% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/f7Login.R
\name{f7Login}
\alias{f7Login}
\title{Provide a template for authentication}
\usage{
f7Login(..., id, title, label = "Sign In", footer = NULL)
}
\arguments{
\item{...}{Slot for inputs like password, text, ...}

\item{id}{Login unique id.}

\item{title}{Login page title.}

\item{label}{Login confirm button label.}

\item{footer}{Optional footer.}
}
\description{
This function does not provide the backend features. You would
need to store credentials in a database for instance.
}
\examples{
if (interactive()) {
 library(shiny)
 library(shinyMobile)
 shiny::shinyApp(
   ui = f7Page(
     title = "My app",
     f7SingleLayout(
       navbar = f7Navbar(
         title = "Login Example",
         hairline = FALSE,
         shadow = TRUE
       ),
       toolbar = f7Toolbar(
         position = "bottom",
         f7Link(label = "Link 1", src = "https://www.google.com"),
         f7Link(label = "Link 2", src = "https://www.google.com", external = TRUE)
       ),
       f7Login(
         id = "loginPage",
         title = "Welcome",
         f7Text(
           inputId = "caption",
           label = "Caption",
           value = "Data Summary",
           placeholder = "Your text here"
         )
       ),
       # main content
       f7BlockTitle(
         title = HTML(paste0("Welcome ", textOutput("userName"))),
         size = "large"
       ) \%>\% f7Align("center")
     )
   ),
   server = function(input, output, session) {

     observeEvent(input$login, {
       updateF7Login(id = "loginPage")
     })

     output$userName <- renderText({
       req(input$login > 0)
       input$caption
     })
   }
 )
}
}
